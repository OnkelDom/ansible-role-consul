---
- name: create system group
  group:
    name: "{{ consul_system_group }}"
    system: true
    state: present
  when: consul_system_group != "root"
  become: true
  tags: consul

- name: create system user
  user:
    name: "{{ consul_system_user }}"
    system: true
    shell: "/sbin/nologin"
    group: "{{ consul_system_group }}"
    createhome: false
  when: consul_system_user != "root"
  become: true
  tags: consul

- name: create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ consul_system_user }}"
    group: "{{ consul_system_group }}"
    mode: "0755"
  with_items:
    - "{{ consul_config_dir }}"
    - "{{ consul_tls_dir }}"
    - "{{ consul_data_dir }}"
    - "{{ consul_log_dir }}"
  become: true
  tags: consul

- name: check if service is installed
  stat:
    path: "{{ consul_binary_install_dir }}/consul"
  register: __consul_is_installed
  become: true
  tags: consul

- name: gather currently installed version
  command: "{{ consul_binary_install_dir }}/consul version"
  args:
    warn: false
  changed_when: false
  register: __consul_current_version_output
  when: __consul_is_installed.stat.exists
  become: true
  tags: consul

- name: localhost - get checksum list from github
  set_fact:
    _checksums: "{{ lookup('url', 'https://releases.hashicorp.com/consul/' + consul_version + '/consul_' + consul_version + '_SHA256SUMS', wantlist=True) | list }}"
  environment: "{{ proxy_env }}"
  delegate_to: localhost
  run_once: true
  become: true
  tags: consul
  when: (not __consul_is_installed.stat.exists) or (__consul_current_version_output.stdout.split(" ")[1]|regex_search('[0-9.]+') != consul_version)

- name: localhost - get checksum for {{ go_arch }} architecture
  set_fact:
    consul_checksum: "{{ item.split(' ')[0] }}"
  with_items: "{{ _checksums }}"
  delegate_to: localhost
  when:
    - "('consul_' + consul_version + '_linux_' + go_arch + '.zip') in item"
    - (not __consul_is_installed.stat.exists) or (__consul_current_version_output.stdout.split(" ")[1]|regex_search('[0-9.]+') != consul_version)
  become: true
  tags: consul

- name: localhost - download binary to local folder
  get_url:
    url: "https://releases.hashicorp.com/consul/{{ consul_version }}/consul_{{ consul_version }}_linux_{{ go_arch }}.zip"
    dest: "/tmp/consul-{{ consul_version }}.linux-{{ go_arch }}.zip"
    checksum: "sha256:{{ consul_checksum }}"
  environment: "{{ proxy_env }}"
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2
  delegate_to: localhost
  check_mode: false
  become: true
  tags: consul
  when: (not __consul_is_installed.stat.exists) or (__consul_current_version_output.stdout.split(" ")[1]|regex_search('[0-9.]+') != consul_version)

- name: localhost - unpack binaries
  unarchive:
    src: "/tmp/consul-{{ consul_version }}.linux-{{ go_arch }}.zip"
    dest: "/tmp"
  delegate_to: localhost
  check_mode: false
  become: true
  tags: consul
  when: (not __consul_is_installed.stat.exists) or (__consul_current_version_output.stdout.split(" ")[1]|regex_search('[0-9.]+') != consul_version)

- name: propagate binaries
  copy:
    src: "/tmp/{{ item }}"
    dest: "{{ consul_binary_install_dir }}/{{ item }}"
    mode: "0755"
    owner: "root"
    group: "root"
  with_items:
    - consul
  notify: restart consul
  become: true
  tags: consul
  when: (not __consul_is_installed.stat.exists) or (__consul_current_version_output.stdout.split(" ")[1]|regex_search('[0-9.]+') != consul_version)

- name: configure
  template:
    src: "consul.config.json.j2"
    dest: "{{ consul_config_dir }}/{{ consul_config_file }}"
    owner: "{{ consul_system_user }}"
    group: "{{ consul_system_group }}"
    mode: "0644"
  notify: reload consul
  become: true
  tags:
    - consul
    - consul_config

- name: create systemd service unit
  template:
    src: consul.service.j2
    dest: /etc/systemd/system/consul.service
    owner: root
    group: root
    mode: "0644"
  notify: restart consul
  become: true
  tags: consul

- name: ensure service is started and enabled
  systemd:
    daemon_reload: true
    name: consul
    state: started
    enabled: true
  become: true
  tags: consul
